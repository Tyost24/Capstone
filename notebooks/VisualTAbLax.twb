<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1108.0821                               -->
<workbook original-version='18.1' source-build='2022.3.1 (20223.22.1108.0821)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='LRY' inline='true' name='federated.0p1h05e0q641qc17ktgqt1ho5r3k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LRY' name='semistructpassivestore-direct.1u27zci0i7d4a311m0q9f0bexuow'>
            <connection class='semistructpassivestore-direct' directory='/Users/tjyost/Desktop/Python/Capstone/data' filename='LRY.xlsx' password='' server=''>
              <semistruct-schemas />
            </connection>
          </named-connection>
        </named-connections>
      </connection>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph />
    </datasource>
    <datasource caption='National Ranks+ (Multiple Connections)' inline='true' name='federated.09vm3by15xeejm10rcyej0lmckl5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LRY' name='excel-direct.1eyp1jh07fllht13po32m0bc2gto'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/tjyost/Desktop/Python/Capstone/data/LRY.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='school' name='textscan.1wudgjb0tox6la14m6eq81xe8jxz'>
            <connection class='textscan' directory='/Users/tjyost/Desktop/Python/Capstone/data' filename='school.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1eyp1jh07fllht13po32m0bc2gto' name='National Ranks' table='[&apos;National Ranks$&apos;]' type='table'>
          <columns gridOrigin='A1:S10001:no:A1:S10001:0' header='yes' lost='0' outcome='2' processed='149985'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='team_nbr' ordinal='1' />
            <column datatype='string' name='name' ordinal='2' />
            <column datatype='string' name='web' ordinal='3' />
            <column datatype='string' name='logo' ordinal='4' />
            <column datatype='integer' name='gp' ordinal='5' />
            <column datatype='integer' name='gf' ordinal='6' />
            <column datatype='integer' name='ga' ordinal='7' />
            <column datatype='integer' name='wins' ordinal='8' />
            <column datatype='integer' name='losses' ordinal='9' />
            <column datatype='integer' name='ties' ordinal='10' />
            <column datatype='real' name='agd' ordinal='11' />
            <column datatype='real' name='sched' ordinal='12' />
            <column datatype='real' name='rating' ordinal='13' />
            <column datatype='integer' name='adj_average' ordinal='14' />
            <column datatype='string' name='state' ordinal='15' />
            <column datatype='integer' name='div_rank_live' ordinal='16' />
            <column datatype='integer' name='ranking' ordinal='17' />
            <column datatype='integer' name='Year' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1eyp1jh07fllht13po32m0bc2gto' name='National Ranks' table='[&apos;National Ranks$&apos;]' type='table'>
            <columns gridOrigin='A1:S10001:no:A1:S10001:0' header='yes' lost='0' outcome='2' processed='149985'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='team_nbr' ordinal='1' />
              <column datatype='string' name='name' ordinal='2' />
              <column datatype='string' name='web' ordinal='3' />
              <column datatype='string' name='logo' ordinal='4' />
              <column datatype='integer' name='gp' ordinal='5' />
              <column datatype='integer' name='gf' ordinal='6' />
              <column datatype='integer' name='ga' ordinal='7' />
              <column datatype='integer' name='wins' ordinal='8' />
              <column datatype='integer' name='losses' ordinal='9' />
              <column datatype='integer' name='ties' ordinal='10' />
              <column datatype='real' name='agd' ordinal='11' />
              <column datatype='real' name='sched' ordinal='12' />
              <column datatype='real' name='rating' ordinal='13' />
              <column datatype='integer' name='adj_average' ordinal='14' />
              <column datatype='string' name='state' ordinal='15' />
              <column datatype='integer' name='div_rank_live' ordinal='16' />
              <column datatype='integer' name='ranking' ordinal='17' />
              <column datatype='integer' name='Year' ordinal='18' />
            </columns>
          </relation>
          <relation connection='textscan.1wudgjb0tox6la14m6eq81xe8jxz' name='school.csv' table='[school#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Overall Rank' ordinal='1' />
              <column datatype='string' name='State' ordinal='2' />
              <column datatype='real' name='Total Score' ordinal='3' />
              <column datatype='integer' name='Quality' ordinal='4' />
              <column datatype='integer' name='Safety' ordinal='5' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[F1 (school.csv)]' value='[school.csv].[F1]' />
          <map key='[F1]' value='[National Ranks].[F1]' />
          <map key='[Overall Rank]' value='[school.csv].[Overall Rank]' />
          <map key='[Quality]' value='[school.csv].[Quality]' />
          <map key='[Safety]' value='[school.csv].[Safety]' />
          <map key='[State]' value='[school.csv].[State]' />
          <map key='[Total Score]' value='[school.csv].[Total Score]' />
          <map key='[Year]' value='[National Ranks].[Year]' />
          <map key='[adj_average]' value='[National Ranks].[adj_average]' />
          <map key='[agd]' value='[National Ranks].[agd]' />
          <map key='[div_rank_live]' value='[National Ranks].[div_rank_live]' />
          <map key='[ga]' value='[National Ranks].[ga]' />
          <map key='[gf]' value='[National Ranks].[gf]' />
          <map key='[gp]' value='[National Ranks].[gp]' />
          <map key='[logo]' value='[National Ranks].[logo]' />
          <map key='[losses]' value='[National Ranks].[losses]' />
          <map key='[name]' value='[National Ranks].[name]' />
          <map key='[ranking]' value='[National Ranks].[ranking]' />
          <map key='[rating]' value='[National Ranks].[rating]' />
          <map key='[sched]' value='[National Ranks].[sched]' />
          <map key='[state]' value='[National Ranks].[state]' />
          <map key='[team_nbr]' value='[National Ranks].[team_nbr]' />
          <map key='[ties]' value='[National Ranks].[ties]' />
          <map key='[web]' value='[National Ranks].[web]' />
          <map key='[wins]' value='[National Ranks].[wins]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:S10001:no:A1:S10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[school.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team_nbr</remote-name>
            <remote-type>20</remote-type>
            <local-name>[team_nbr]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>team_nbr</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>web</remote-name>
            <remote-type>130</remote-type>
            <local-name>[web]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>web</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>logo</remote-name>
            <remote-type>130</remote-type>
            <local-name>[logo]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>logo</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gp]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>gp</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gf</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gf]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>gf</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ga</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ga]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>ga</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wins</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wins]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>wins</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>losses</remote-name>
            <remote-type>20</remote-type>
            <local-name>[losses]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>losses</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ties</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ties]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>ties</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>agd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[agd]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>agd</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sched</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sched]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>sched</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>adj_average</remote-name>
            <remote-type>20</remote-type>
            <local-name>[adj_average]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>adj_average</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>div_rank_live</remote-name>
            <remote-type>20</remote-type>
            <local-name>[div_rank_live]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>div_rank_live</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ranking</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ranking]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>ranking</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[National Ranks]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (school.csv)]</local-name>
            <parent-name>[school.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[school.csv_D991C0A1591D4E4A9B3D035A21E7A38E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overall Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Overall Rank]</local-name>
            <parent-name>[school.csv]</parent-name>
            <remote-alias>Overall Rank</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[school.csv_D991C0A1591D4E4A9B3D035A21E7A38E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[school.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[school.csv_D991C0A1591D4E4A9B3D035A21E7A38E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Score]</local-name>
            <parent-name>[school.csv]</parent-name>
            <remote-alias>Total Score</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[school.csv_D991C0A1591D4E4A9B3D035A21E7A38E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quality</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quality]</local-name>
            <parent-name>[school.csv]</parent-name>
            <remote-alias>Quality</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[school.csv_D991C0A1591D4E4A9B3D035A21E7A38E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Safety</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Safety]</local-name>
            <parent-name>[school.csv]</parent-name>
            <remote-alias>Safety</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[school.csv_D991C0A1591D4E4A9B3D035A21E7A38E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='National Ranks' datatype='table' name='[__tableau_internal_object_id__].[National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='school.csv' datatype='table' name='[__tableau_internal_object_id__].[school.csv_D991C0A1591D4E4A9B3D035A21E7A38E]' role='measure' type='quantitative' />
      <column caption='Adj Average' datatype='integer' name='[adj_average]' role='measure' type='quantitative' />
      <column caption='Agd' datatype='real' name='[agd]' role='measure' type='quantitative' />
      <column caption='Div Rank Live' datatype='integer' name='[div_rank_live]' role='measure' type='quantitative' />
      <column caption='Ga' datatype='integer' name='[ga]' role='measure' type='quantitative' />
      <column caption='Gf' datatype='integer' name='[gf]' role='measure' type='quantitative' />
      <column caption='Gp' datatype='integer' name='[gp]' role='measure' type='quantitative' />
      <column caption='Logo' datatype='string' name='[logo]' role='dimension' type='nominal' />
      <column caption='Losses' datatype='integer' name='[losses]' role='measure' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Ranking' datatype='integer' name='[ranking]' role='measure' type='quantitative' />
      <column caption='Rating' datatype='real' name='[rating]' role='measure' type='quantitative' />
      <column caption='Sched' datatype='real' name='[sched]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Team Nbr' datatype='integer' name='[team_nbr]' role='dimension' type='ordinal' />
      <column caption='Ties' datatype='integer' name='[ties]' role='measure' type='quantitative' />
      <column caption='Web' datatype='string' name='[web]' role='dimension' type='nominal' />
      <column caption='Wins' datatype='integer' name='[wins]' role='measure' type='quantitative' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Year:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;D.C.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#f0e442'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='National Ranks' id='National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60'>
            <properties context=''>
              <relation connection='excel-direct.1eyp1jh07fllht13po32m0bc2gto' name='National Ranks' table='[&apos;National Ranks$&apos;]' type='table'>
                <columns gridOrigin='A1:S10001:no:A1:S10001:0' header='yes' lost='0' outcome='2' processed='149985'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='team_nbr' ordinal='1' />
                  <column datatype='string' name='name' ordinal='2' />
                  <column datatype='string' name='web' ordinal='3' />
                  <column datatype='string' name='logo' ordinal='4' />
                  <column datatype='integer' name='gp' ordinal='5' />
                  <column datatype='integer' name='gf' ordinal='6' />
                  <column datatype='integer' name='ga' ordinal='7' />
                  <column datatype='integer' name='wins' ordinal='8' />
                  <column datatype='integer' name='losses' ordinal='9' />
                  <column datatype='integer' name='ties' ordinal='10' />
                  <column datatype='real' name='agd' ordinal='11' />
                  <column datatype='real' name='sched' ordinal='12' />
                  <column datatype='real' name='rating' ordinal='13' />
                  <column datatype='integer' name='adj_average' ordinal='14' />
                  <column datatype='string' name='state' ordinal='15' />
                  <column datatype='integer' name='div_rank_live' ordinal='16' />
                  <column datatype='integer' name='ranking' ordinal='17' />
                  <column datatype='integer' name='Year' ordinal='18' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='school.csv' id='school.csv_D991C0A1591D4E4A9B3D035A21E7A38E'>
            <properties context=''>
              <relation connection='textscan.1wudgjb0tox6la14m6eq81xe8jxz' name='school.csv' table='[school#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Overall Rank' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='real' name='Total Score' ordinal='3' />
                  <column datatype='integer' name='Quality' ordinal='4' />
                  <column datatype='integer' name='Safety' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[state]' />
              <expression op='[State]' />
            </expression>
            <first-end-point object-id='National Ranks_6EB8E50D745F43BB8AA56DD1CACFAF60' />
            <second-end-point object-id='school.csv_D991C0A1591D4E4A9B3D035A21E7A38E' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Offline' />
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='State education rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='National Ranks+ (Multiple Connections)' name='federated.09vm3by15xeejm10rcyej0lmckl5' />
          </datasources>
          <mapsources>
            <mapsource name='Offline' />
          </mapsources>
          <datasource-dependencies datasource='federated.09vm3by15xeejm10rcyej0lmckl5'>
            <column datatype='integer' name='[Overall Rank]' role='measure' type='quantitative' />
            <column caption='State1' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Overall Rank]' derivation='Sum' name='[sum:Overall Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.09vm3by15xeejm10rcyej0lmckl5].[Longitude (generated)]' field-type='quantitative' max='37062166.410782352' min='25065175.586678743' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.09vm3by15xeejm10rcyej0lmckl5].[Latitude (generated)]' field-type='quantitative' max='9009384.1875794455' min='1816104.127022034' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='font-style' data-class='subtotal' scope='rows' value='normal' />
            <format attr='font-weight' data-class='total' scope='rows' value='normal' />
            <format attr='font-weight' field='[federated.09vm3by15xeejm10rcyej0lmckl5].[none:State:nk]' value='normal' />
            <format attr='font-weight' data-class='subtotal' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.09vm3by15xeejm10rcyej0lmckl5].[none:State:nk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.09vm3by15xeejm10rcyej0lmckl5].[none:State:nk]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.09vm3by15xeejm10rcyej0lmckl5].[sum:Overall Rank:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.09vm3by15xeejm10rcyej0lmckl5].[sum:Overall Rank:qk]' palette='orange_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.09vm3by15xeejm10rcyej0lmckl5].[none:State:nk]' />
              <text column='[federated.09vm3by15xeejm10rcyej0lmckl5].[sum:Overall Rank:qk]' />
              <lod column='[federated.09vm3by15xeejm10rcyej0lmckl5].[none:State:nk]' />
              <color column='[federated.09vm3by15xeejm10rcyej0lmckl5].[sum:Overall Rank:qk]' />
              <geometry column='[federated.09vm3by15xeejm10rcyej0lmckl5].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.09vm3by15xeejm10rcyej0lmckl5].[Latitude (generated)]</rows>
        <cols>[federated.09vm3by15xeejm10rcyej0lmckl5].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6198AE33-C371-473D-BB9F-E3AE66C8CB06}' />
    </worksheet>
    <worksheet name='Top 10 States by most Teams'>
      <table>
        <view>
          <datasources>
            <datasource caption='National Ranks+ (Multiple Connections)' name='federated.09vm3by15xeejm10rcyej0lmckl5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.09vm3by15xeejm10rcyej0lmckl5'>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[name]' derivation='Count' name='[cnt:name:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.09vm3by15xeejm10rcyej0lmckl5].[none:Year:ok]'>
            <groupfilter function='member' level='[none:Year:ok]' member='2022' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.09vm3by15xeejm10rcyej0lmckl5].[none:state:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([name])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:state:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:state:nk]' member='&quot;British Columbia&quot;' />
                    <groupfilter function='member' level='[none:state:nk]' member='&quot;Manitoba&quot;' />
                    <groupfilter function='member' level='[none:state:nk]' member='&quot;Ontario&quot;' />
                    <groupfilter function='member' level='[none:state:nk]' member='&quot;Quebec&quot;' />
                    <groupfilter function='member' level='[none:state:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.09vm3by15xeejm10rcyej0lmckl5].[none:Year:ok]</column>
            <column>[federated.09vm3by15xeejm10rcyej0lmckl5].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.09vm3by15xeejm10rcyej0lmckl5].[cnt:name:qk]' />
              <text column='[federated.09vm3by15xeejm10rcyej0lmckl5].[none:state:nk]' />
              <text column='[federated.09vm3by15xeejm10rcyej0lmckl5].[cnt:name:qk]' />
              <color column='[federated.09vm3by15xeejm10rcyej0lmckl5].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E59A2299-DCD7-406B-AC92-3C2FEB567261}' />
    </worksheet>
  </worksheets>
  <windows source-height='48'>
    <window class='worksheet' name='Top 10 States by most Teams'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09vm3by15xeejm10rcyej0lmckl5].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09vm3by15xeejm10rcyej0lmckl5].[none:Year:qk]</field>
            <field>[federated.09vm3by15xeejm10rcyej0lmckl5].[none:name:nk]</field>
            <field>[federated.09vm3by15xeejm10rcyej0lmckl5].[none:state:nk]</field>
            <field>[federated.09vm3by15xeejm10rcyej0lmckl5].[sum:ranking:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8062A199-A536-4215-951B-29B472C890FC}' />
    </window>
    <window class='worksheet' maximized='true' name='State education rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.09vm3by15xeejm10rcyej0lmckl5].[sum:Overall Rank:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09vm3by15xeejm10rcyej0lmckl5].[none:State:nk]</field>
            <field>[federated.09vm3by15xeejm10rcyej0lmckl5].[sum:Overall Rank:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F87426A9-D6D8-464E-99B7-6949E5707BEF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='State education rank' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Top 10 States by most Teams' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd5hc933f+/cp07dXYBd1UUmwU6BIkxJFkSJNypJly5JL4pbEjq/u81yX
      xPG9j3MdXSdO4ujGUexcW7ItS44ly3ZEW7IkSqJIsVcQAIledxeL7XV2+plTfvePAUB0bJmZ
      MzPn+3qefbDYnZ35YrH7+5zzq5pSSiGEECJwdL8LEEII4Q8JACGECCgJACGECCgJACGECCgJ
      ACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJ
      ACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJ
      ACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJ
      ACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJ
      ACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJ
      ACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJ
      ACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJ
      ACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJ
      ACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJ
      ACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJ
      ACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJ
      ACGECCgJACGECCgJACGECCgJACGECCgJACGECCgJACGECCjT7wKEEPVLKRflzuB583jOOMpb
      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
      Ku3+H9m7HR6eCCPzAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
